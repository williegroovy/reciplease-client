/* istanbul ignore next */'use strict'; /* eslint-env jest*/
/* eslint-disable global-require */
jest.unmock('../DatePicker');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_DatePicker = require('../DatePicker'); /* istanbul ignore next */var _DatePicker2 = _interopRequireDefault(_DatePicker);
var /* istanbul ignore next */_DatePickerHeader = require('../DatePickerHeader'); /* istanbul ignore next */var _DatePickerHeader2 = _interopRequireDefault(_DatePickerHeader);
var /* istanbul ignore next */_DatePickerCalendar = require('../DatePickerCalendar'); /* istanbul ignore next */var _DatePickerCalendar2 = _interopRequireDefault(_DatePickerCalendar);
var /* istanbul ignore next */_YearPicker = require('../YearPicker'); /* istanbul ignore next */var _YearPicker2 = _interopRequireDefault(_YearPicker);
var /* istanbul ignore next */_DialogFooter = require('../../Dialogs/DialogFooter'); /* istanbul ignore next */var _DialogFooter2 = _interopRequireDefault(_DialogFooter);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('DatePicker', function () {
  it('renders a DatePickerHeader and a DialogFooter', function () {
    var DateTimeFormat = require('../../utils/DateUtils/DateTimeFormat');
    var props = {
      className: 'a',
      okLabel: 'a',
      okPrimary: false,
      onOkClick: jest.fn(),
      cancelLabel: 'a',
      cancelPrimary: false,
      onCancelClick: jest.fn(),
      DateTimeFormat: DateTimeFormat,
      locales: 'en-US',
      calendarDate: new Date(),
      calendarTempDate: new Date(),
      calendarMode: 'calendar',
      changeCalendarMode: jest.fn(),
      onSwipeChange: jest.fn() };


    var picker = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DatePicker2.default, props));
    var headers = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(picker, /* istanbul ignore next */_DatePickerHeader2.default);
    expect(headers.length).toBe(1);

    var footers = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(picker, /* istanbul ignore next */_DialogFooter2.default);
    expect(footers.length).toBe(1);
  });

  it('renders a calendar when the calendarMode is calendar', function () {
    var DateTimeFormat = require('../../utils/DateUtils/DateTimeFormat');
    var props = {
      className: 'a',
      okLabel: 'a',
      okPrimary: false,
      onOkClick: jest.fn(),
      cancelLabel: 'a',
      cancelPrimary: false,
      onCancelClick: jest.fn(),
      DateTimeFormat: DateTimeFormat,
      locales: 'en-US',
      calendarDate: new Date(),
      calendarTempDate: new Date(),
      calendarMode: 'calendar',
      changeCalendarMode: jest.fn(),
      onSwipeChange: jest.fn() };


    var picker = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DatePicker2.default, props));
    var calendars = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(picker, /* istanbul ignore next */_DatePickerCalendar2.default);
    var years = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(picker, /* istanbul ignore next */_YearPicker2.default);
    expect(calendars.length).toBe(1);
    expect(years.length).toBe(0);
  });

  it('renders a year picker when the calendarMode is year', function () {
    var DateTimeFormat = require('../../utils/DateUtils/DateTimeFormat');
    var props = {
      className: 'a',
      okLabel: 'a',
      okPrimary: false,
      onOkClick: jest.fn(),
      cancelLabel: 'a',
      cancelPrimary: false,
      onCancelClick: jest.fn(),
      DateTimeFormat: DateTimeFormat,
      locales: 'en-US',
      calendarDate: new Date(),
      calendarTempDate: new Date(),
      calendarMode: 'year',
      changeCalendarMode: jest.fn(),
      onSwipeChange: jest.fn() };


    var picker = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DatePicker2.default, props));
    var calendars = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(picker, /* istanbul ignore next */_DatePickerCalendar2.default);
    var years = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(picker, /* istanbul ignore next */_YearPicker2.default);
    expect(calendars.length).toBe(0);
    expect(years.length).toBe(1);
  });
});