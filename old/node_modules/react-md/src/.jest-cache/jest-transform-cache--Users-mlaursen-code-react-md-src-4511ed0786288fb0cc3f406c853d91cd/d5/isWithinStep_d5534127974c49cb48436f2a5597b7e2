/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../isWithinStep');
var /* istanbul ignore next */_isWithinStep = require('../isWithinStep'); /* istanbul ignore next */var _isWithinStep2 = _interopRequireDefault(_isWithinStep);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('isWithinStep', function () {
  it('works with with whole numbers', function () {
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 1)).toBe(true);
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 20)).toBe(true);
  });

  it('returns false if the value is less than the step', function () {
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 100)).toBe(false);
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 30)).toBe(false);
  });

  it('allows for decimal precision', function () {
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 0.01)).toBe(true);
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 0.1)).toBe(true);
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 0.001)).toBe(true);
    expect( /* istanbul ignore next */(0, _isWithinStep2.default)(20, 0.25)).toBe(true);
  });
});