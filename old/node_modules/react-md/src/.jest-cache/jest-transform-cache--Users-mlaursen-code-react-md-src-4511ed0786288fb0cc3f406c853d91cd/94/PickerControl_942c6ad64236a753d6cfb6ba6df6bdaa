/* istanbul ignore next */'use strict'; /* eslint-env jest*/
jest.unmock('../PickerControl');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_PickerControl = require('../PickerControl'); /* istanbul ignore next */var _PickerControl2 = _interopRequireDefault(_PickerControl);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('PickerControl', function () {
  it('merges className and style', function () {
    var style = { display: 'block' };
    var className = 'test';
    var pickerControl = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_PickerControl2.default, /* istanbul ignore next */{
        style: style,
        className: className,
        active: false,
        onClick: jest.fn() }, /* istanbul ignore next */'A'));





    var pickerControlNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(pickerControl);
    expect(pickerControlNode.style.display).toBe(style.display);
    expect(pickerControlNode.classList.contains(className)).toBe(true);
  });

  it('calls the onClick function when clicked', function () {
    var onClick = jest.fn();
    var pickerControl = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_PickerControl2.default, /* istanbul ignore next */{ active: false, onClick: onClick }, /* istanbul ignore next */'A'));


    var pickerControlNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(pickerControl);
    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.click(pickerControlNode);
    expect(onClick.mock.calls.length).toBe(1);
  });
});