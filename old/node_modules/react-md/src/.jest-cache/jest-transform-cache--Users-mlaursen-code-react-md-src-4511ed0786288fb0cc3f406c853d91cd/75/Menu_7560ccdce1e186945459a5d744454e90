/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../Menu');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_Menu = require('../Menu'); /* istanbul ignore next */var _Menu2 = _interopRequireDefault(_Menu);
var /* istanbul ignore next */_List = require('../../Lists/List'); /* istanbul ignore next */var _List2 = _interopRequireDefault(_List);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('Menu', function () {
  it('merges className and style', function () {
    var props = {
      style: { background: 'black' },
      className: 'test',
      listStyle: { background: 'orange' },
      listClassName: 'wowww',
      isOpen: true,
      onClose: jest.fn() };


    var menu = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Menu2.default, props));
    var menuNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(menu);
    var list = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(menu, /* istanbul ignore next */_List2.default);
    expect(menuNode.style.background).toBe(props.style.background);
    expect(menuNode.className).toContain(props.className);
    expect(list.props.style).toEqual(props.listStyle);
    expect(list.props.className).toContain(props.listClassName);
  });
});