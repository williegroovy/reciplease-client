/* istanbul ignore next */'use strict'; /* eslint-env jest*/
jest.unmock('../Switch');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_Switch = require('../Switch'); /* istanbul ignore next */var _Switch2 = _interopRequireDefault(_Switch);
var /* istanbul ignore next */_SelectionControl = require('../SelectionControl'); /* istanbul ignore next */var _SelectionControl2 = _interopRequireDefault(_SelectionControl);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('Switch', function () {
  it('renders the SelectionControl component with the correct props', function () {
    var props = {
      id: 'test',
      name: 'test',
      value: 'what',
      label: 'Test' };


    var switchEl = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Switch2.default, props));
    var control = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(switchEl, /* istanbul ignore next */_SelectionControl2.default);
    expect(control.props.id).toBe(props.id);
    expect(control.props.name).toBe(props.name);
    expect(control.props.value).toBe(props.value);
    expect(control.props.type).toBe('switch');
    expect(control.props.__superSecreteProp).toBe(true);
  });
});