/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../Card');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_Card = require('../Card'); /* istanbul ignore next */var _Card2 = _interopRequireDefault(_Card);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('Card', function () {
  it('merges className and style', function () {
    var props = {
      style: { background: 'black' },
      className: 'test' };


    var card = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Card2.default, props));

    var cardNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(card);
    expect(cardNode.style.background).toBe(props.style.background);
    expect(cardNode.className).toContain(props.className);
  });

  it('passes event listeners correctly', function () {
    var onClick = jest.fn();
    var onMouseDown = jest.fn();
    var onMouseUp = jest.fn();
    var onMouseOver = jest.fn();
    var onMouseLeave = jest.fn();
    var onTouchStart = jest.fn();
    var onTouchEnd = jest.fn();
    var onTouchCancel = jest.fn();

    var card = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Card2.default, /* istanbul ignore next */{
      onClick: onClick,
      onMouseDown: onMouseDown,
      onMouseUp: onMouseUp,
      onMouseOver: onMouseOver,
      onMouseLeave: onMouseLeave,
      onTouchStart: onTouchStart,
      onTouchEnd: onTouchEnd,
      onTouchCancel: onTouchCancel }));



    var cardNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(card);
    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.click(cardNode);
    expect(onClick).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.mouseOver(cardNode);
    expect(onMouseOver).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.mouseLeave(cardNode);
    expect(onMouseLeave).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.mouseDown(cardNode);
    expect(onMouseDown).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.mouseUp(cardNode);
    expect(onMouseUp).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.touchStart(cardNode);
    expect(onTouchStart).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.touchEnd(cardNode);
    expect(onTouchEnd).toBeCalled();

    /* istanbul ignore next */_reactAddonsTestUtils.Simulate.touchCancel(cardNode);
    expect(onTouchCancel).toBeCalled();
  });
});