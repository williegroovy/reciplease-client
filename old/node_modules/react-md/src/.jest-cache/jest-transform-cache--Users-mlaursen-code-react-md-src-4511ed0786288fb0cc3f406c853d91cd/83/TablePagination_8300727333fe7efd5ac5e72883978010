/* istanbul ignore next */'use strict'; /* eslint-env jest */
/* eslint-disable react/prop-types,max-len */
jest.unmock('../TablePagination'); /* istanbul ignore next */var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_TablePagination = require('../TablePagination'); /* istanbul ignore next */var _TablePagination2 = _interopRequireDefault(_TablePagination);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

Table = function (_React$Component) {_inherits(Table, _React$Component);function Table() {_classCallCheck(this, Table);return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));}_createClass(Table, [{ key: 'getChildContext', value: function getChildContext()







    {
      return { baseId: 'testing' };
    } }, { key: 'render', value: function render()

    {
      return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'table', /* istanbul ignore next */null, this.props.children));
    } }]);return Table;}( /* istanbul ignore next */_react2.default.Component); /* istanbul ignore next */Table.childContextTypes = { baseId: /* istanbul ignore next */_react2.default.PropTypes.oneOfType([/* istanbul ignore next */_react2.default.PropTypes.number, /* istanbul ignore next */_react2.default.PropTypes.string]).isRequired };


describe('TablePagination', function () {
  describe('setRowsPerPage', function () {
    it('should call the onPagination prop with the correct values when uncontrolled', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._setRowsPerPage(30);
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(0);
      expect(onPagination.mock.calls[0][1]).toBe(30);
      expect(onPagination.mock.calls[0][2]).toBe( /* istanbul ignore next */_TablePagination2.default.defaultProps.defaultPage);
    });

    it('should call the onPagination prop with the correct values uncontrolled and different default props', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination, defaultPage: 5 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._setRowsPerPage(30);
      expect(onPagination.mock.calls[0][0]).toBe(0);
      expect(onPagination.mock.calls[0][1]).toBe(30);
      expect(onPagination.mock.calls[0][2]).toBe(1);
    });

    it('should call the onPagination prop with the correct values when controlled', function () {
      var onPagination = jest.fn();
      var props = { rows: 10000, onPagination: onPagination, page: 20, rowsPerPage: 10 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._setRowsPerPage(50);
      expect(onPagination.mock.calls[0][0]).toBe(0);
      expect(onPagination.mock.calls[0][1]).toBe(50);
      expect(onPagination.mock.calls[0][2]).toBe(1);
    });
  });

  describe('increment', function () {
    it('should call the onPagination prop with the correct values when uncontrolled', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._increment();
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(10);
      expect(onPagination.mock.calls[0][1]).toBe( /* istanbul ignore next */_TablePagination2.default.defaultProps.defaultRowsPerPage);
      expect(onPagination.mock.calls[0][2]).toBe(2);
    });

    it('should call the onPagination prop with the correct values when uncontrolled with different default props', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination, defaultPage: 5, defaultRowsPerPage: 30 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._increment();
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(150);
      expect(onPagination.mock.calls[0][1]).toBe(props.defaultRowsPerPage);
      expect(onPagination.mock.calls[0][2]).toBe(6);
    });

    it('should call the onPagination prop with the correct values when controlled', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination, page: 5, rowsPerPage: 30 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._increment();
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(150);
      expect(onPagination.mock.calls[0][1]).toBe(props.rowsPerPage);
      expect(onPagination.mock.calls[0][2]).toBe(6);
    });
  });

  describe('decrement', function () {
    it('should call the onPagination prop with the correct values when uncontrolled', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination, defaultPage: 2 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._decrement();
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(0);
      expect(onPagination.mock.calls[0][1]).toBe( /* istanbul ignore next */_TablePagination2.default.defaultProps.defaultRowsPerPage);
      expect(onPagination.mock.calls[0][2]).toBe(1);
    });

    it('should call the onPagination prop with the correct values when uncontrolled with different default props', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination, defaultPage: 5, defaultRowsPerPage: 30 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._decrement();
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(90);
      expect(onPagination.mock.calls[0][1]).toBe(props.defaultRowsPerPage);
      expect(onPagination.mock.calls[0][2]).toBe(4);
    });

    it('should call the onPagination prop with the correct values when controlled', function () {
      var onPagination = jest.fn();
      var props = { rows: 1000, onPagination: onPagination, page: 5, rowsPerPage: 30 };
      var table = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement(Table, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TablePagination2.default, props)));
      var pagination = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(table, /* istanbul ignore next */_TablePagination2.default);

      pagination._decrement();
      expect(onPagination.mock.calls.length).toBe(1);
      expect(onPagination.mock.calls[0][0]).toBe(90);
      expect(onPagination.mock.calls[0][1]).toBe(props.rowsPerPage);
      expect(onPagination.mock.calls[0][2]).toBe(4);
    });
  });
});