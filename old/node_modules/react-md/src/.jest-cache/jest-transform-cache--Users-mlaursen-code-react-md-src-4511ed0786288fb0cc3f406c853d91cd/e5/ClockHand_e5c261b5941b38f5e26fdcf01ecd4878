/* istanbul ignore next */'use strict'; /* eslint-env jest*/
jest.unmock('../ClockHand');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_ClockHand = require('../ClockHand'); /* istanbul ignore next */var _ClockHand2 = _interopRequireDefault(_ClockHand);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('ClockHand', function () {
  it('positions the hand from the given coordinates', function () {
    var hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 1, minutes: false })); /* istanbul ignore next */var _findDOMNode$style =


    /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).style,left = _findDOMNode$style.left,top = _findDOMNode$style.top;
    expect(left).toBe('136px');
    expect(top).toBe('136px');
  });

  it('adds the className inner-hour if the time is on a 24 hour clock', function () {
    var hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 1, minutes: false }));


    var className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).not.toContain('inner');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 13, minutes: false }));


    className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).toContain('inner');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 24, minutes: false }));


    className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).toContain('inner');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 1, minutes: false }));


    className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).not.toContain('inner');
  });

  it('adds the className minute-hover when the hand is on a minute that is not divisible by 5', function () {
    var hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 0, minutes: /* istanbul ignore next */true }));


    var className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).not.toContain('minute-hover');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 2, minutes: /* istanbul ignore next */true }));


    className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).toContain('minute-hover');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 59, minutes: /* istanbul ignore next */true }));


    className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).toContain('minute-hover');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 30, minutes: /* istanbul ignore next */true }));


    className = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).className;
    expect(className).toContain('md-clock-hand');
    expect(className).not.toContain('minute-hover');
  });

  it('sets the transform style to the correct degrees for a time', function () {
    var hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 3, minutes: false })); /* istanbul ignore next */var
    transform = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).style.transform;

    expect(transform).toBe('rotate3d(0, 0, 1, 0deg)');

    hand = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ClockHand2.default, /* istanbul ignore next */{ coords: 136, time: 2, minutes: false }));
    transform = /* istanbul ignore next */(0, _reactDom.findDOMNode)(hand).style.transform;

    expect(transform).toBe('rotate3d(0, 0, 1, -30deg)');
  });
});