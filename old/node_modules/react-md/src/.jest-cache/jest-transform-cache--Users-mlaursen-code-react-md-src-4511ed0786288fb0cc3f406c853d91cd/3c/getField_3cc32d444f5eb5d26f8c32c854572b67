/* istanbul ignore next */'use strict'; /* eslint-env jest */

jest.unmock('../getField');

var /* istanbul ignore next */_getField = require('../getField'); /* istanbul ignore next */var _getField2 = _interopRequireDefault(_getField);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('getField', function () {
  it('gets the first defined field from two objects', function () {
    var o1 = { test: 'Object 1' };
    var o2 = { test: 'Object 2' };

    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'test')).toBe(o1.test);

    o1 = { test: undefined };
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'test')).toBe(o2.test);
  });

  it('defaults to retrieving the value', function () {
    var o1 = {};
    var o2 = { value: 'test' };
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2)).toBe(o2.value);
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'value')).toBe(o2.value);
  });

  it('will get a nulled field', function () {
    var o1 = { value: null };
    var o2 = { value: 'hello' };
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'value')).toBe(null);

    o1 = { value: '' };
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'value')).toBe('');

    o1 = {};
    o2 = { value: null };
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'value')).toBe(null);

    o2 = { value: '' };
    expect( /* istanbul ignore next */(0, _getField2.default)(o1, o2, 'value')).toBe('');
  });
});