/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../TileAddon');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_TileAddon = require('../TileAddon'); /* istanbul ignore next */var _TileAddon2 = _interopRequireDefault(_TileAddon);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('TileAddon', function () {
  it('merges className and style', function () {
    var props = {
      style: { background: 'black' },
      className: 'test',
      icon: 'a' };


    var tileAddon = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TileAddon2.default, props));

    var tileAddonNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(tileAddon);
    expect(tileAddonNode.style.background).toBe(props.style.background);
    expect(tileAddonNode.className).toContain(props.className);
  });

  it('returns null if an icon or avatar is not specified', function () {
    var addon = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TileAddon2.default, /* istanbul ignore next */null));
    var addonNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(addon);
    expect(addonNode).toBe(null);
  });
});