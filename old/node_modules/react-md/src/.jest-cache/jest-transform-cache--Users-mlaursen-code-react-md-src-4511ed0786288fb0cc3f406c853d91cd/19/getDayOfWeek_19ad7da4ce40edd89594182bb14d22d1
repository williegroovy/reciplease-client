/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../getDayOfWeek');

var /* istanbul ignore next */_getDayOfWeek = require('../getDayOfWeek'); /* istanbul ignore next */var _getDayOfWeek2 = _interopRequireDefault(_getDayOfWeek);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('getDayOfWeek', function () {
  it('gets a relative day of the week from any given date', function () {
    var monday2016April4 = new Date(2016, 3, 4);
    var sunday2016April3 = new Date(2016, 3, 3);

    expect( /* istanbul ignore next */(0, _getDayOfWeek2.default)(monday2016April4, 0)).toEqual(sunday2016April3);
    expect( /* istanbul ignore next */(0, _getDayOfWeek2.default)(monday2016April4, 1)).toEqual(monday2016April4);
  });

  it('can return a day of the week from the previous month', function () {
    var april1 = new Date(2016, 3, 1);
    var march31 = new Date(2016, 2, 31);

    expect( /* istanbul ignore next */(0, _getDayOfWeek2.default)(april1, 4)).toEqual(march31);
  });

  it('can return a day of the week from the next month', function () {
    var march31 = new Date(2016, 2, 31);
    var april1 = new Date(2016, 3, 1);

    expect( /* istanbul ignore next */(0, _getDayOfWeek2.default)(march31, 5)).toEqual(april1);
  });
});