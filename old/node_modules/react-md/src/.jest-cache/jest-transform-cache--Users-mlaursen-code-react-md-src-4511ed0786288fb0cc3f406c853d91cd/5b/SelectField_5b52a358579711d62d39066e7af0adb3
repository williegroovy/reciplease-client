/* istanbul ignore next */'use strict'; /* eslint-env jest */
/* eslint-disable max-len, react/no-multi-comp */
jest.unmock('../SelectField'); /* istanbul ignore next */var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_enzyme = require('enzyme');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_SelectField = require('../SelectField'); /* istanbul ignore next */var _SelectField2 = _interopRequireDefault(_SelectField);
var /* istanbul ignore next */_Menu = require('../../Menus/Menu'); /* istanbul ignore next */var _Menu2 = _interopRequireDefault(_Menu);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var PROPS = { id: 'test' };
describe('SelectField', function () {
  it('merges className and style', function () {
    var props = Object.assign({}, PROPS, {
      id: 'woop',
      style: { background: 'orange' },
      className: 'woop-woop' });


    var field = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SelectField2.default, props));
    var menu = /* istanbul ignore next */(0, _reactAddonsTestUtils.findRenderedComponentWithType)(field, /* istanbul ignore next */_Menu2.default);
    expect(menu.props.style).toBe(props.style);
    expect(menu.props.className).toContain(props.className);
  });

  it('should update the activeLabel if the prop value changes', function () {
    var field = /* istanbul ignore next */(0, _enzyme.shallow)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SelectField2.default, /* istanbul ignore next */{ id: 'test', menuItems: ['1', '2', '3'], value: '' }));
    expect(field.state('activeLabel')).toBe('');

    field.setProps({ value: '2' });
    expect(field.state('activeLabel')).toBe('2');
  });

  it('should update the activeLabel if the menuItems prop changes', function () {
    var menuItems = ['Hello', 'World!', 'Yes', 'No'];
    var field = /* istanbul ignore next */(0, _enzyme.shallow)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SelectField2.default, /* istanbul ignore next */{ id: 'test', menuItems: menuItems, value: 'Missing' }));
    expect(field.state('activeLabel')).toBe('');

    field.setProps({ menuItems: /* istanbul ignore next */[].concat(menuItems, ['Missing']) });
    expect(field.state('activeLabel')).toBe('Missing');
  });

  it('should still have the correct label if the menuItems are defined as a list in the render and the parent component rerenders', function () {
    var renderCount = 0; /* istanbul ignore next */var
    Test = function (_React$Component) {_inherits(Test, _React$Component);function Test() {_classCallCheck(this, Test);return _possibleConstructorReturn(this, (Test.__proto__ || Object.getPrototypeOf(Test)).apply(this, arguments));}_createClass(Test, [{ key: 'render', value: function render()
        {
          renderCount += 1;

          return (
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SelectField2.default, /* istanbul ignore next */{ id: 'test', menuItems: ['1', '2', '3'], defaultValue: '2' })));


        } }]);return Test;}( /* istanbul ignore next */_react2.default.Component);


    var test = /* istanbul ignore next */(0, _enzyme.mount)( /* istanbul ignore next */_react2.default.createElement(Test, /* istanbul ignore next */null));
    expect(renderCount).toBe(1);
    expect(test.find( /* istanbul ignore next */_SelectField2.default).get(0).state.activeLabel).toBe('2');
    test.update();
    expect(renderCount).toBe(2);
    expect(test.find( /* istanbul ignore next */_SelectField2.default).get(0).state.activeLabel).toBe('2');
  });

  it('should still have the correct label if the menuItems of objects are defined as a list in the render and the parent component rerenders', function () {
    var renderCount = 0; /* istanbul ignore next */var
    Test = function (_React$Component2) {_inherits(Test, _React$Component2);function Test() {_classCallCheck(this, Test);return _possibleConstructorReturn(this, (Test.__proto__ || Object.getPrototypeOf(Test)).apply(this, arguments));}_createClass(Test, [{ key: 'render', value: function render()
        {
          renderCount += 1;

          return (
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SelectField2.default, /* istanbul ignore next */{
                id: 'test',
                menuItems: [{ label: 'Hello', value: 0 }, { label: 'World', value: 1 }, { label: 'Omega', value: 2 }],
                defaultValue: 1 })));



        } }]);return Test;}( /* istanbul ignore next */_react2.default.Component);


    var test = /* istanbul ignore next */(0, _enzyme.mount)( /* istanbul ignore next */_react2.default.createElement(Test, /* istanbul ignore next */null));
    expect(renderCount).toBe(1);
    expect(test.find( /* istanbul ignore next */_SelectField2.default).get(0).state.activeLabel).toBe('World');
    test.update();
    expect(renderCount).toBe(2);
    expect(test.find( /* istanbul ignore next */_SelectField2.default).get(0).state.activeLabel).toBe('World');
  });
});