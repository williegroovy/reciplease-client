/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../updateUnit');

var /* istanbul ignore next */_updateUnit = require('../updateUnit'); /* istanbul ignore next */var _updateUnit2 = _interopRequireDefault(_updateUnit);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('updateUnit', function () {
  it('applies a function to a number unit', function () {
    var fn = function fn(u) /* istanbul ignore next */{return u;};
    expect( /* istanbul ignore next */(0, _updateUnit2.default)(3, fn)).toBe(3);
    expect( /* istanbul ignore next */(0, _updateUnit2.default)(4, function (u) /* istanbul ignore next */{return u / 2;})).toBe(2);
  });

  it('applies a function to a string unit', function () {
    var fn = function fn(u) /* istanbul ignore next */{return u;};
    var half = function half(u) /* istanbul ignore next */{return u / 2;};

    expect( /* istanbul ignore next */(0, _updateUnit2.default)('1rem', fn)).toBe('1rem');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)('1em', fn)).toBe('1em');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)('1px', fn)).toBe('1px');

    expect( /* istanbul ignore next */(0, _updateUnit2.default)('2rem', half)).toBe('1rem');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)('2em', half)).toBe('1em');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)('2px', half)).toBe('1px');
  });

  it('applies a function to a number unit and casts it to the given toUnit', function () {
    var fn = function fn(u) /* istanbul ignore next */{return u;};
    var half = function half(u) /* istanbul ignore next */{return u / 2;};

    expect( /* istanbul ignore next */(0, _updateUnit2.default)(1, fn, 'rem')).toBe('1rem');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)(1, fn, 'em')).toBe('1em');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)(1, fn, 'px')).toBe('1px');

    expect( /* istanbul ignore next */(0, _updateUnit2.default)(2, half, 'rem')).toBe('1rem');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)(2, half, 'em')).toBe('1em');
    expect( /* istanbul ignore next */(0, _updateUnit2.default)(2, half, 'px')).toBe('1px');
  });
});