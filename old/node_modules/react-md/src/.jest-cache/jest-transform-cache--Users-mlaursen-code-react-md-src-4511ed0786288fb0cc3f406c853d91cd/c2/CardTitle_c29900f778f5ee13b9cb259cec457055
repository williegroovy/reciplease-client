/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../CardTitle');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_CardTitle = require('../CardTitle'); /* istanbul ignore next */var _CardTitle2 = _interopRequireDefault(_CardTitle);
var /* istanbul ignore next */_CardTitleBlock = require('../CardTitleBlock'); /* istanbul ignore next */var _CardTitleBlock2 = _interopRequireDefault(_CardTitleBlock);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('CardTitle', function () {
  it('merges className and style', function () {
    var props = {
      style: { background: 'black' },
      className: 'test',
      title: 'Woop' };


    var cardTitle = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CardTitle2.default, props));

    var cardTitleNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(cardTitle);
    expect(cardTitleNode.style.background).toBe(props.style.background);
    expect(cardTitleNode.className).toContain(props.className);
  });

  it('renders the CardTitleBlock with the correct props', function () {
    var props = { title: 'Woop', id: 'boop', subtitle: 'noop' };
    var title = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CardTitle2.default, props));
    var blocks = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(title, /* istanbul ignore next */_CardTitleBlock2.default);
    expect(blocks.length).toBe(1);

    var bProps = blocks[0].props;
    expect(bProps.id).toBe(props.id);
    expect(bProps.title).toBe(props.title);
    expect(bProps.subtitle).toBe(props.subtitle);
  });
});