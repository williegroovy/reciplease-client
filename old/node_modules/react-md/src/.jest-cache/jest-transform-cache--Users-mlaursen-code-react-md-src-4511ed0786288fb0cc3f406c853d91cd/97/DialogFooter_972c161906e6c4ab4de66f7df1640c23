/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../DialogFooter');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_DialogFooter = require('../DialogFooter'); /* istanbul ignore next */var _DialogFooter2 = _interopRequireDefault(_DialogFooter);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var PROPS = { actions: [{ label: 'a' }] };

describe('DialogFooter', function () {
  it('merges className and style', function () {
    var props = Object.assign({}, PROPS, {
      style: { background: 'black' },
      className: 'test' });


    var dialogFooter = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DialogFooter2.default, props));

    var dialogFooterNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(dialogFooter);
    expect(dialogFooterNode.style.background).toBe(props.style.background);
    expect(dialogFooterNode.className).toContain(props.className);
  });

  it('renders as null if there are no actions', function () {
    var footer = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_DialogFooter2.default, /* istanbul ignore next */null));
    var node = /* istanbul ignore next */(0, _reactDom.findDOMNode)(footer);
    expect(node).toBe(null);
  });
});