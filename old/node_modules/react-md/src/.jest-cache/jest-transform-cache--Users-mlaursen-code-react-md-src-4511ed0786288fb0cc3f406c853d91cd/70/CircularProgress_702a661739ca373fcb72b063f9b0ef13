/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../CircularProgress');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_CircularProgress = require('../CircularProgress'); /* istanbul ignore next */var _CircularProgress2 = _interopRequireDefault(_CircularProgress);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('CircularProgress', function () {
  it('merges className and style', function () {
    var props = {
      style: { background: 'black' },
      className: 'test',
      id: 'test' };


    var circularProgress = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CircularProgress2.default, props));

    var circularProgressNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(circularProgress);
    expect(circularProgressNode.style.background).toBe(props.style.background);
    expect(circularProgressNode.className).toContain(props.className);
  });

  it('converts to a determinate progress when the value is defined', function () {
    var props = { id: 'woop', value: 0 };
    var progress = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CircularProgress2.default, props));

    var progressNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(progress);
    expect(progressNode.className).toContain('determinate');
  });
});