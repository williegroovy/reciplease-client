/* istanbul ignore next */'use strict'; /* eslint-env jest */

jest.unmock('../formatTime');
var /* istanbul ignore next */_formatTime = require('../formatTime'); /* istanbul ignore next */var _formatTime2 = _interopRequireDefault(_formatTime);
var /* istanbul ignore next */_intl = require('intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var threeFiftyOne = new Date(2016, 3, 2, 3, 51);
var fifteenThirtyTwo = new Date(2016, 3, 2, 15, 32);
describe('formatTime', function () {
  it('gets a formatted time string for a given locale', function () {
    expect( /* istanbul ignore next */(0, _formatTime2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'en-US', threeFiftyOne)).toBe('3:51 AM');
    expect( /* istanbul ignore next */(0, _formatTime2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'da-DK', threeFiftyOne)).toBe('3.51');
  });

  it('formats a with AM/PM or as 24h depending on time zone', function () {
    expect( /* istanbul ignore next */(0, _formatTime2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'en-US', fifteenThirtyTwo)).toBe('3:32 PM');
    expect( /* istanbul ignore next */(0, _formatTime2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'da-DK', fifteenThirtyTwo)).toBe('15.32');
  });
});