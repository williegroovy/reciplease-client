/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../formatTime');
jest.unmock('../extractTimeParts');

var /* istanbul ignore next */_extractTimeParts = require('../extractTimeParts'); /* istanbul ignore next */var _extractTimeParts2 = _interopRequireDefault(_extractTimeParts);
var /* istanbul ignore next */_intl = require('intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var threeFiftyOne = new Date(2016, 3, 2, 3, 51);
var fifteenThirtyTwo = new Date(2016, 3, 2, 15, 32);
describe('extractTimeParts', function () {
  it('extracts the hour from a date', function () {
    var three = /* istanbul ignore next */(0, _extractTimeParts2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'en-US', threeFiftyOne).hours;
    var fifteen = /* istanbul ignore next */(0, _extractTimeParts2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'da-DK', fifteenThirtyTwo).hours;

    expect(three).toBe('3');
    expect(fifteen).toBe('15');
  });

  it('extracts the minutes including the optional separator', function () {
    var enFiftyOneMinutes = /* istanbul ignore next */(0, _extractTimeParts2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'en-US', threeFiftyOne).minutes;
    var dkFiftyOneMinutes = /* istanbul ignore next */(0, _extractTimeParts2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'da-DK', threeFiftyOne).minutes;

    expect(enFiftyOneMinutes).toBe(':51');
    expect(dkFiftyOneMinutes).toBe('.51');
  });

  it('extracts the time period if it exists for the locale', function () {
    var enTimePeriod = /* istanbul ignore next */(0, _extractTimeParts2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'en-US', threeFiftyOne).timePeriod;
    var dkTimePeriod = /* istanbul ignore next */(0, _extractTimeParts2.default)( /* istanbul ignore next */_intl.DateTimeFormat, 'da-DK', threeFiftyOne).timePeriod;

    expect(enTimePeriod).toBe('AM');
    expect(dkTimePeriod).toBe(undefined);
  });
});