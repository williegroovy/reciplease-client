/* istanbul ignore next */'use strict'; /* eslint-env jest*/
/* eslint-disable global-require */
jest.unmock('../CalendarMonth');

// Required to actually render the days
jest.unmock('../../utils/DateUtils/stripTime');
jest.unmock('../../utils/DateUtils/getDayOfWeek');
jest.unmock('../../utils/DateUtils/getLastDay');
jest.unmock('../../utils/DateUtils/addDate');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');




var /* istanbul ignore next */_CalendarDate = require('../CalendarDate'); /* istanbul ignore next */var _CalendarDate2 = _interopRequireDefault(_CalendarDate);
var /* istanbul ignore next */_CalendarMonth = require('../CalendarMonth'); /* istanbul ignore next */var _CalendarMonth2 = _interopRequireDefault(_CalendarMonth);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('CalendarMonth', function () {
  it('merges className and style', function () {
    var DateTimeFormat = require('../../utils/DateUtils/DateTimeFormat');
    var style = { display: 'block' };
    var className = 'test';
    var props = {
      style: style,
      className: className,
      calendarDate: new Date(),
      calendarTempDate: new Date(),
      onCalendarDateClick: jest.fn(),
      DateTimeFormat: DateTimeFormat,
      locales: 'en-US' };

    var calendarMonth = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CalendarMonth2.default, props));

    var calendarMonthNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(calendarMonth);
    expect(calendarMonthNode.style.display).toBe(style.display);
    expect(calendarMonthNode.classList.contains(className)).toBe(true);
  });

  it('renders the number of days in a month', function () {
    var DateTimeFormat = require('../../utils/DateUtils/DateTimeFormat');
    var props = {
      DateTimeFormat: DateTimeFormat,
      locales: 'en-US',
      calendarDate: new Date(2016, 3, 12),
      calendarTempDate: new Date(2016, 3, 12),
      onCalendarDateClick: jest.fn() };


    var calendarMonth = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CalendarMonth2.default, props));
    var days = /* istanbul ignore next */(0, _reactAddonsTestUtils.scryRenderedComponentsWithType)(calendarMonth, /* istanbul ignore next */_CalendarDate2.default);
    expect(days.length).toBe(30);
    expect(days[11].props.active).toBe(true);
  });
});