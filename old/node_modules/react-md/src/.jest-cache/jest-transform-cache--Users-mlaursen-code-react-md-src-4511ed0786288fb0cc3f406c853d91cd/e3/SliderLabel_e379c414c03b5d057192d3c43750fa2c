/* istanbul ignore next */'use strict'; /* eslint-env jest */
jest.unmock('../SliderLabel');

var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactDom = require('react-dom');
var /* istanbul ignore next */_reactAddonsTestUtils = require('react-addons-test-utils');

var /* istanbul ignore next */_SliderLabel = require('../SliderLabel'); /* istanbul ignore next */var _SliderLabel2 = _interopRequireDefault(_SliderLabel);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('SliderLabel', function () {
  it('returns null if there are no children', function () {
    var label = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SliderLabel2.default, /* istanbul ignore next */{ htmlFor: 'd' }, /* istanbul ignore next */'Hello'));
    var labelNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(label);
    expect(labelNode).not.toBe(null);

    label = /* istanbul ignore next */(0, _reactAddonsTestUtils.renderIntoDocument)( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SliderLabel2.default, /* istanbul ignore next */null));
    labelNode = /* istanbul ignore next */(0, _reactDom.findDOMNode)(label);
    expect(labelNode).toBe(null);
  });
});